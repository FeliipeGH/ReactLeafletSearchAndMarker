{"version":3,"sources":["maps/constants.js","maps/MainMap.js","App.js","index.js"],"names":["L","icon","iconSize","iconAnchor","popupAnchor","iconUrl","shadowUrl","LeafletGeoSearch","map","useMap","provider","OpenStreetMapProvider","searchControl","GeoSearchControl","showMarker","searchLabel","style","useEffect","addControl","removeControl","MainMap","useState","markData","setMarkData","handleMark","data","MapContent","useMemo","MapContainer","center","zoom","scrollWheelZoom","height","width","TileLayer","attribution","url","MapConsumer","onMarked","marker","useRef","LCG","geocoder","Control","Geocoder","nominatim","on","e","latlng","lat","lng","current","removeLayer","addTo","reverse","options","crs","scale","getZoom","results","r","bindPopup","name","openPopup","OnEventClick","margin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEeA,MAAEC,KAAK,CAClBC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,QAAS,4DACTC,UAAW,gE,OCEf,SAASC,IACL,IAAMC,EAAMC,cACNC,EAAW,IAAIC,IACfC,EAAgB,IAAIC,IAAiB,CACvCH,WACAI,YAAY,EACZC,YAAa,sBACbC,MAAO,QAMX,OAJAC,qBAAU,WAEN,OADAT,EAAIU,WAAWN,GACR,kBAAMJ,EAAIW,cAAcP,OAE5B,KA6BJ,IAAMQ,EAAU,WACnB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,SAACC,GAChBF,EAAY,eAAIE,KAGdC,EAAaC,mBAAQ,WACvB,OACI,eAACC,EAAA,EAAD,CAAcC,OAAQ,CAAC,oBAAqB,iBAAkBC,KAAM,GAAIC,iBAAiB,EAC3Ef,MAAO,CAACgB,OAAQ,MAAOC,MAAO,QAD5C,UAEI,cAACC,EAAA,EAAD,CACIC,YAAY,yEACZC,IAAI,uDAER,cAAC7B,EAAD,IACA,cAAC8B,EAAA,EAAD,UAEQ,SAAC7B,GAAD,OA5CxB,SAAsBA,EAAK8B,GACvB,IAAMC,EAASC,iBAAO,MAsBtB,OADAvB,qBAnBe,WACXwB,IAAIzC,EAAIA,IACR,IAAM0C,EAAWD,IAAIzC,EAAE2C,QAAQC,SAASC,YACxCrC,EAAIsC,GAAG,SAAS,SAAUC,GACtB,MAAmBA,EAAEC,OAAdC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,IACW,OAAnBX,EAAOY,SACP3C,EAAI4C,YAAYb,EAAOY,SAE3BZ,EAAOY,QAAUnD,IAAEuC,OAAO,CAACU,EAAKC,GAAM,CAACjD,SAAOoD,MAAM7C,GACpDkC,EAASY,QAAQP,EAAEC,OAAQxC,EAAI+C,QAAQC,IAAIC,MAAMjD,EAAIkD,YAAY,SAAAC,GAC7D,IAAIC,EAAID,EAAQ,GACZC,IACArB,EAAOY,QAAQU,UAAf,OAAyBD,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAGE,MAAMC,YAClCzB,EAASsB,YAMP,CAACpD,EAAK8B,IACjB,KAqBsB0B,CAAaxD,EAAKgB,WAK5C,IAEH,OACI,sBAAKR,MAAO,CAACgB,OAAQ,SAArB,UACKN,EACD,sBAAKV,MAAO,CACRiD,OAAQ,UADZ,UAGI,6DACA,oCAAK3C,QAAL,IAAKA,OAAL,EAAKA,EAAUwC,cCzEhBI,MARf,WACI,OACI,8BACI,cAAC,EAAD,O,MCAZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2548c5e3.chunk.js","sourcesContent":["import L from \"leaflet\";\r\n\r\nexport default L.icon({\r\n    iconSize: [25, 41],\r\n    iconAnchor: [10, 41],\r\n    popupAnchor: [2, -40],\r\n    iconUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-icon.png\",\r\n    shadowUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-shadow.png\"\r\n});\r\n","import React, {useEffect, useMemo, useRef, useState} from 'react';\r\nimport {MapConsumer, MapContainer, TileLayer, useMap} from 'react-leaflet';\r\nimport {GeoSearchControl, OpenStreetMapProvider} from \"leaflet-geosearch\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet-geosearch/dist/geosearch.css\";\r\nimport L from \"leaflet\";\r\nimport LCG from 'leaflet-control-geocoder';\r\nimport icon from \"./constants\";\r\n\r\nfunction LeafletGeoSearch() {\r\n    const map = useMap();\r\n    const provider = new OpenStreetMapProvider();\r\n    const searchControl = new GeoSearchControl({\r\n        provider,\r\n        showMarker: false,\r\n        searchLabel: \"Buscar dirección\",\r\n        style: \"bar\"\r\n    });\r\n    useEffect(() => {\r\n        map.addControl(searchControl);\r\n        return () => map.removeControl(searchControl);\r\n    });\r\n    return null;\r\n}\r\n\r\nfunction OnEventClick(map, onMarked) {\r\n    const marker = useRef(null);\r\n\r\n    const onInit = () => {\r\n        LCG.L = L;\r\n        const geocoder = LCG.L.Control.Geocoder.nominatim();\r\n        map.on(\"click\", function (e) {\r\n            const {lat, lng} = e.latlng;\r\n            if (marker.current !== null) {\r\n                map.removeLayer(marker.current);\r\n            }\r\n            marker.current = L.marker([lat, lng], {icon}).addTo(map);\r\n            geocoder.reverse(e.latlng, map.options.crs.scale(map.getZoom()), results => {\r\n                let r = results[0];\r\n                if (r) {\r\n                    marker.current.bindPopup(r?.name).openPopup();\r\n                    onMarked(r);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(onInit, [map, onMarked]);\r\n    return null;\r\n}\r\n\r\nexport const MainMap = () => {\r\n    const [markData, setMarkData] = useState({});\r\n\r\n    const handleMark = (data) => {\r\n        setMarkData({...data});\r\n    };\r\n\r\n    const MapContent = useMemo(() => {\r\n        return (\r\n            <MapContainer center={[18.960336897236065, -99.225899768445]} zoom={12} scrollWheelZoom={true}\r\n                          style={{height: \"80%\", width: \"100%\"}}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <LeafletGeoSearch/>\r\n                <MapConsumer>\r\n                    {\r\n                        (map) => OnEventClick(map, handleMark)\r\n                    }\r\n                </MapConsumer>\r\n            </MapContainer>\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{height: \"100vh\"}}>\r\n            {MapContent}\r\n            <div style={{\r\n                margin: \"0 1rem\"\r\n            }}>\r\n                <h2>Dirección seleccionada: </h2>\r\n                <h3>{markData?.name}</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import {MainMap} from \"./maps/MainMap\";\n\nfunction App() {\n    return (\n        <div>\n            <MainMap/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}